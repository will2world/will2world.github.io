<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>{{ .Site.Title }} – {{ .Title }}</title>
    <link>{{ .Permalink }}</link>
    <description>Recent content {{ if ne .Title .Site.Title }}{{ with .Title }}in {{.}} {{ end }}{{ end }}on {{ .Site.Title }}</description>
    <generator>Hugo -- gohugo.io</generator>{{ with .Site.LanguageCode }}
    <language>{{.}}</language>{{end}}{{ with .Site.Author.email }}
    <managingEditor>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}</managingEditor>{{end}}{{ with .Site.Author.email }}
    <webMaster>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}</webMaster>{{end}}{{ with .Site.Copyright }}
    <copyright>{{.}}</copyright>{{end}}{{ if not .Date.IsZero }}
    <lastBuildDate>{{ .Date.Format "Mon, 02 Jan 2006 15:04:05 -0700" | safeHTML }}</lastBuildDate>{{ end }}
    {{ with .OutputFormats.Get "RSS" }}
      {{ printf "<atom:link href=%q rel=\"self\" type=%q />" .Permalink .MediaType | safeHTML }}
    {{ end }}
    
    {{/* ⬇️⬇️⬇️ 이 아래 로직을 더 간단하고 확실하게 수정했습니다. ⬇️⬇️⬇️ */}}
    {{ $pages := "" }}
    {{ if .IsHome }}
      {{/* 홈페이지 RSS일 경우: 설정에 명시된 섹션의 글만 가져옴 */}}
      {{ $sections := .Site.Params.rss.sections | default (slice "blog") }}
      {{ $pages = where .Site.RegularPages "Type" "in" $sections }}
    {{ else }}
      {{/* 'logbook' 같은 섹션 RSS일 경우: 해당 섹션의 모든 글을 가져옴 */}}
      {{ $pages = .Pages }}
    {{ end }}

    {{ range first 50 $pages }}
    <item>
      <title>{{ .Title }}</title>
      <link>{{ .Permalink }}</link>
      <pubDate>{{ .Date.Format "Mon, 02 Jan 2006 15:04:05 -0700" | safeHTML }}</pubDate>
      {{ with .Site.Author.email }}<author>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}</author>{{end}}
      <guid>{{ .Permalink }}</guid>
      <description>
        {{ $img := (.Resources.ByType "image").GetMatch "*featured*" }}
        {{ with $img }}
        {{ $img := .Resize "640x" }}
        {{ printf "<![CDATA[<img src=\"%s\" width=\"%d\" height=\"%d\"/>]]>" $img.Permalink $img.Width $img.Height | safeHTML }}
        {{ end }}
        {{ .Content | html }}
      </description>
    </item>
    {{ end }}
  </channel>
</rss>
